//#include config.oajs
//#include helpers.oajs

function AttackTarget(targetSerial) {
    var targetSerial = targetSerial === undefined ? Orion.TargetSystemSerial() : targetSerial;

    if (!Player.WarMode())
        Orion.WarMode(true);

    if (Orion.FindObject(targetSerial)) {
        Orion.ShowStatusbar(targetSerial, _attack["statusBar"]["x"], _attack["statusBar"]["y"], false);
        Orion.CharPrint(targetSerial, 20, "<< Target >>");
        Orion.Attack(targetSerial);
        if (_attack["follow"]) {
            Orion.Follow(targetSerial);
        }
    }
}

function Attack() {
  AttackTarget(Orion.TargetSystemSerial());
}

function AutoHealSelf() {
    print("Healing at " + getPercentValue(Player.MaxHits(), _healing["threshold"]) + "HP")
    while (true) {
        while (!Player.Dead() && (Player.Hits() < (getPercentValue(Player.MaxHits(), _healing["threshold"])) || Player.Poisoned())) {
            Orion.Say("[bandself");
            Orion.Wait(100);

            if (Orion.BuffExists(_buffs["healing"]) && Orion.BuffTimeRemaining(_buffs["healing"])) {

                Orion.AddDisplayTimer("healing",
                    Orion.BuffTimeRemaining(_buffs["healing"]),
                    "custom",
                    "LineBar",
                    "Healing...",
                    _healing["statusBar"]["x"],
                    _healing["statusBar"]["x"]
                );
                Orion.DisplayTimerSetIcon("healing", "Left", "0x0E21");
                Orion.DisplayTimerSetSize("healing", 100, 30);

                while (Orion.BuffExists(_buffs["healing"])) {
                    Orion.Wait(100);
                }
            }


            if (Orion.Count('0x0E21') < 80) {
                charPrint('[' + Orion.Count('0x0E21') + '] bandages left ! ');
            }
        }
        Orion.Wait(500);
    }
}

function ToggleSpell(spellName) {
    print("Started")
    print("Spell: " + spellName)
    while (true) {
        if (!Player.Dead() && Player.Mana() > 5 && !Orion.SpellStatus(spellName)) {
            Orion.Cast(spellName);
            Orion.Wait(500);
        }
        Orion.Wait(100);
    }
}

function ToggleAbility(abilityName) {
    print("Started")
    print("Ability: " + abilityName)
    while (true) {
        if (!Player.Dead() && Player.Mana() > 5 && !Orion.AbilityStatus(abilityName)) {
            Orion.UseAbility(abilityName);
            Orion.Wait(500);
        }
        Orion.Wait(100);
    }
}

function SwapAttacks() {
    if (Orion.ScriptRunning("ToggleAbility")) {
        Orion.ToggleScript("ToggleAbility")
        Orion.Exec("ToggleSpell", true, ["Lightning Strike"])
        charPrint(" >> Now casting Lightning Strike")
        return;
    }

    Orion.ToggleScript("ToggleSpell")
    Orion.Exec("ToggleAbility", true, ["Primary"])
    charPrint(" >> Now casting Secondary weapon ability")
}